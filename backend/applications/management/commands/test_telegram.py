from django.core.management.base import BaseCommand
from django.utils import timezone
from applications.telegram_service import telegram_service
from applications.models import Application


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram'

    def add_arguments(self, parser):
        parser.add_argument(
            '--test-message',
            action='store_true',
            help='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
        )
        parser.add_argument(
            '--test-application',
            action='store_true',
            help='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ',
        )

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏\n'))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        from django.conf import settings
        
        if not settings.TELEGRAM_BOT_TOKEN:
            self.stdout.write(
                self.style.ERROR('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ')
            )
            return
        
        if not settings.TELEGRAM_CHAT_ID:
            self.stdout.write(
                self.style.ERROR('‚ùå TELEGRAM_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ')
            )
            return
        
        self.stdout.write(f'ü§ñ Bot Token: {settings.TELEGRAM_BOT_TOKEN[:10]}...')
        self.stdout.write(f'üí¨ Chat ID: {settings.TELEGRAM_CHAT_ID}\n')
        
        # –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        self.stdout.write('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram...')
        if telegram_service.test_connection():
            self.stdout.write(self.style.SUCCESS('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram —É—Å–ø–µ—à–Ω–æ!'))
        else:
            self.stdout.write(self.style.ERROR('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram'))
            return
        
        # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        if options['test_message']:
            self.stdout.write('\nüì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...')
            
            test_message = f"""
üß™ <b>–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.

‚è∞ <b>–í—Ä–µ–º—è:</b> {timezone.now().strftime('%d.%m.%Y –≤ %H:%M')}
üÜî <b>–¢–µ—Å—Ç ID:</b> #test-001
            """
            
            result = telegram_service.send_message(test_message)
            
            if result:
                self.stdout.write(self.style.SUCCESS('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!'))
                self.stdout.write(f'Message ID: {result["result"]["message_id"]}')
            else:
                self.stdout.write(self.style.ERROR('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'))
        
        # –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞—è–≤–∫–µ
        if options['test_application']:
            self.stdout.write('\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞—è–≤–∫–µ...')
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
            test_application = Application(
                student_name="–¢–µ—Å—Ç–æ–≤—ã–π –£—á–µ–Ω–∏–∫",
                parent_name="–¢–µ—Å—Ç–æ–≤—ã–π –†–æ–¥–∏—Ç–µ–ª—å",
                phone="+7 (999) 123-45-67",
                email="test@example.com",
                grade=9,
                goal="–¢–µ—Å—Ç–æ–≤–∞—è —Ü–µ–ª—å –æ–±—É—á–µ–Ω–∏—è",
                message="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
                created_at=timezone.now()
            )
            
            result = telegram_service.send_application_notification(test_application)
            
            if result:
                self.stdout.write(self.style.SUCCESS('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!'))
                self.stdout.write(f'Message ID: {result}')
            else:
                self.stdout.write(self.style.ERROR('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ'))
        
        self.stdout.write(self.style.SUCCESS('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!'))
